generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Supplier {
  id Int @id @default(autoincrement())

  code     String  @unique
  name     String
  afm      String  @unique
  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Document Document[]
}

model Customer {
  id Int @id @default(autoincrement())

  code     String  @unique
  name     String
  afm      String  @unique
  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Document Document[]
}

model Material {
  id Int @id @default(autoincrement())

  code String @unique
  name String

  SpecialItem SpecialItem?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipeLine   RecipeLine[]
  MatrialInfo  MaterialLot[]
  DocumentLine DocumentLine[]
}

model MaterialLot {
  id Int @id @default(autoincrement())

  materialId Int
  material   Material @relation(references: [id], fields: [materialId], onDelete: Cascade, onUpdate: Cascade)

  lot String

  productionDate DateTime
  expirationDate DateTime

  documentLines DocumentLine[]

  @@unique([materialId, lot])
}

model SpecialItem {
  id Int @id @default(autoincrement())

  materialId Int      @unique
  material   Material @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  recipes Recipe[]
}

model Recipe {
  id Int @id @default(autoincrement())

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  specialItemId Int
  specialItem   SpecialItem @relation(fields: [specialItemId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  recipeLine RecipeLine[]
  document   Document[]
}

model RecipeLine {
  id Int @id @default(autoincrement())

  recipeId Int
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Restrict, onUpdate: Cascade )

  materialId Int
  material   Material @relation(fields: [materialId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  qty Decimal

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([recipeId, materialId])
}

enum DocumentKind {
  PURCHASE
  SALE
  PRODUCTION
  TRANSFER
  ADJUSTMENT
}

enum MovementDirection {
  IN
  OUT
}

model Document {
  id Int @id @default(autoincrement())

  kind DocumentKind

  date   DateTime @default(now())
  number Int
  notes  String?

  supplierId Int?
  customerId Int?
  recipeId   Int?

  supplier Supplier? @relation(fields: [supplierId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customer Customer? @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  recipe   Recipe?   @relation(fields: [recipeId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  documentLines DocumentLine[]

  @@unique([kind, number])
}

model DocumentLine {
  id Int @id @default(autoincrement())

  documentId Int
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  lineNo Int

  materialId Int
  material   Material @relation(fields: [materialId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  materialLotId Int?
  materialLot   MaterialLot? @relation(fields: [materialLotId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  movementDirection MovementDirection

  qty Decimal

  @@unique([documentId, lineNo])
}
